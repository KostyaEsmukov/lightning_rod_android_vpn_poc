#!/system/bin/sh

# socat -d -d TCP-L:$$$,bind=localhost,reuseaddr,forever,interval=10 TUN:$$$/31,tun-name=socat0,tun-type=tap,up

ORIGINAL_ARGS="$@"

# tcp/udp
ADDR1_TYPE=""
ADDR1_PARAMS=""
# tun
ADDR2_TYPE=""
ADDR2_PARAMS=""


failexit() {
    echo "Android socat wrapper: $@" 1>&2
    exit 1
}

parse_option() {
   [ "d" == "$1" ] && return 0
   failexit "Unknown option: $1"
}

parse_arg() {
    if [ "-" == `echo "$1" | cut -c 1` ]; then
        # cut off the leading `-`
        _CURRENT_ARG=`echo "$1" | cut -c 2-`
        while [ ! -z "$_CURRENT_ARG" ]; do
            # pass first char
            parse_option `printf "%c" "$_CURRENT_ARG"`
            # cut off first char
            _CURRENT_ARG=`echo "$_CURRENT_ARG" | cut -c 2-`
        done
        return
    fi

    _TYPE=`echo "$1" | cut -d ':' -f1`
    _PARAMS=`echo "$1" | cut -d ':' -f2-`

    if [ -z "$ADDR1_TYPE" ]; then
        ADDR1_TYPE="$_TYPE"
        ADDR1_PARAMS="$_PARAMS"
        return 0
    fi

    if [ -z "$ADDR2_TYPE" ]; then
        ADDR2_TYPE="$_TYPE"
        ADDR2_PARAMS="$_PARAMS"
        return 0
    fi

    failexit "Only 2 addresses must be specified."
}

reorder_addresses() {
    if [ "$ADDR2_TYPE" != "TUN" ]; then
        # swap
        _TYPE="$ADDR2_TYPE"
        _PARAMS="$ADDR2_PARAMS"
        ADDR2_TYPE="$ADDR1_TYPE"
        ADDR2_PARAMS="$ADDR1_PARAMS"
        ADDR1_TYPE="$_TYPE"
        ADDR1_PARAMS="$_PARAMS"
    fi
}

get_vpnservice_configuration() {
    get_vpnservice_configuration_tun
    get_vpnservice_configuration_server
    # echo "c,172.28.172.1,12312,tcp a,10.123.123.2,24 r,10.123.123.0,24"
}

get_vpnservice_configuration_tun() {
    # ADDR2_TYPE="TUN"
    # ADDR2_PARAMS="999.999.999.999/31,tun-name=socat0,tun-type=tap,up"

    [ "TUN" != "$ADDR2_TYPE" ] && failexit "Assertion failed: other address must be a TUN"

    echo "$ADDR2_PARAMS" | grep -qE "tun-type=(tun|tap)" || failexit "Only tun-type=tun and tap are supported"
    echo "$ADDR2_PARAMS" | grep -q "tun-type=tap" && printf " o,tap"

    # append local TUN address a,10.123.123.2,24
    printf " a,"
    echo "$ADDR2_PARAMS" | awk -F ',' '{printf "%s", $1;}' | awk -F '/' '{printf "%s,%s", $1, $2;}'

    # Add a default route for that network.
    printf " r,"
    echo "$ADDR2_PARAMS" | awk -F ',' '{printf "%s", $1;}' | awk -F '/' '{printf "%s,%s", $1, $2;}'

    # turn on packet info: o,pi
    echo "$ADDR2_PARAMS" | grep -q "iff-no-pi" || printf " o,pi"

    # interface name: n,socat0
    printf " n,"
    _TUN_NAME=`echo "$ADDR2_PARAMS" | grep -o "tun-name=[^,]\+" | awk -F '=' '{printf "%s", $2;}'`
    [ -z "$_TUN_NAME" ] && _TUN_NAME="socat0"
    printf "%s" "$_TUN_NAME"
}

get_vpnservice_configuration_server() {
    # ADDR1_TYPE="TCP-L" # or TCP,UDP-CONNECT, ... ?
    # ADDR1_PARAMS="99999,bind=localhost,reuseaddr,forever,interval=10 "

    if [ "TCP" == "$ADDR1_TYPE" ]; then
        # c,172.28.172.1,12312,tcp
        printf " c,"
        echo "$ADDR1_PARAMS" | awk -F ',' '{printf "%s", $1;}' | awk -F ':' '{printf "%s,%s", $1, $2;}'
        printf ",tcp"
    elif [ "TCP-L" == "$ADDR1_TYPE" ]; then
        printf " l,"
        echo "$ADDR1_PARAMS" | awk -F ',' '{printf "%s", $1;}'
        printf ",tcp"
    else
        failexit "Unsupported address: $ADDR1_TYPE"
    fi
}

run_apk() {
    # todo capture exit code of a subshell
    get_vpnservice_configuration

    am broadcast --user 0 \
    -a ru.esmukov.kpfu.lightningrodandroidvpnpoc.intent.VpnConnect \
    --es configuration "`get_vpnservice_configuration`"

    trap "stop_vpnservice" SIGINT SIGTERM

    # wait forever until a kill signal is received
    while :; do
        # todo detect service failures
        sleep 10 &
        wait
    done
}

stop_vpnservice() {
    # todo running multiple vpnservices this way seems impossible

    am broadcast --user 0 \
    -a ru.esmukov.kpfu.lightningrodandroidvpnpoc.intent.VpnDisconnect

    exit $?
}


# todo [ "" != "$@" ] causes
# [: -d: unexpected operator/operand
while [ "" != "$1" ]; do
#while [ 0 -ne `echo "$@" | wc -c` ]; do
    parse_arg "$1"
    shift
done

reorder_addresses

if [ "TUN" == "$ADDR2_TYPE" ]; then
    # tun is requested - use VpnService via apk
    run_apk
    failexit "Assertion fail"
fi


# todo generate this dynamically ???
export PATH="/sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin:/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/bin/applets"

exec socat $ORIGINAL_ARGS